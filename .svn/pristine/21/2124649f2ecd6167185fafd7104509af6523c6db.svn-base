package factorial;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.*;

public class FactorialTest {

  private Factorial factorial;

  @BeforeEach
  void setUp() {
    factorial = new Factorial();
  }

  @Test
  void canary() {
    assertTrue(true);
  }

  @Test
  void factorialCases() {

    //Feedback: this test fails SRP by doing two things instead of one. We need to have one test focus on one function, not two.
    assertAll(
      () -> assertEquals(new BigInteger("1"), factorial.factorialImperative(0)),
      () -> assertEquals(new BigInteger("1"), factorial.factorialRecursive(1)),
      () -> assertEquals(new BigInteger("2"), factorial.factorialRecursive(2)),
      () -> assertEquals(new BigInteger("6"), factorial.factorialImperative(3)),
      () -> assertEquals(factorial.factorialImperative(3), factorial.factorialRecursive(3)),
      () -> assertEquals(new BigInteger("24"), factorial.factorialImperative(4)),
      () -> assertEquals(new BigInteger("120"), factorial.factorialRecursive(5)),
      () -> assertEquals(factorial.factorialImperative(5), factorial.factorialRecursive(5)),
      () -> assertEquals(new BigInteger("3628800"), factorial.factorialImperative(10)),
      () -> assertEquals(new BigInteger("30414093201713378043612608166064768844377641568960512000000000000"), factorial.factorialRecursive(50))
    );

  }

}
