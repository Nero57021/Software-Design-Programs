package locator.service;

import locator.preview.Location;
import org.json.JSONObject;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

public class OpenNotifyLocationWebService implements IssInformationService {

  @Override
  public String getFlyOverTimeForLocation(Location location) {
    try {
      SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mma");
      dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
      System.out.println(location.lat() + " " + location.lon());
      String rawResponse = getRawResponse(location.lat(), location.lon());

      String timestamp = parseJSON(rawResponse);

      return dateFormat.format(new Date(Long.parseLong(timestamp) * 1000L));
    } catch (Exception ex) {
      return ex.getMessage();
    }
  }

  public String getRawResponse(double lat, double lon) throws Exception {

    HttpClient client = HttpClient.newHttpClient();
    HttpRequest request = HttpRequest.newBuilder()
      .uri(URI.create(String.format("http://api.open-notify.org/iss-pass.json?lat=%f&lon=%f&n=1", lat, lon)))
      .build();
    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
    return response.body();
  }

  public String parseJSON(String rawJSON) {

    JSONObject obj = new JSONObject(rawJSON);

    if (obj.getString("message").equals("success")) {
      return Long.toString((
        (JSONObject) obj.getJSONArray("response").get(0))
        .getLong("risetime"));
    }
    throw new RuntimeException("invalid location");
  }
}
